<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta http-equiv="X-UA-Compatible" content="IE=edge">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Search | {{ config.title }}</title>
  <link rel="canonical" href="{{ config.url }}/search" />
  <!-- Bootstrap CSS -->
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css" rel="stylesheet"
    integrity="sha384-EVSTQN3/azprG1Anm3QDgpJLIm9Nao0Yz1ztcQTwFspd3yD65VohhpuuCOmLASjC" crossorigin="anonymous" />
  <style>
    .fit-cover {
      object-fit: cover;
    }

    @media (min-width: 768px) {
      .fit-cover {
        position: absolute;
      }
    }

    #sr .card {
      cursor: pointer;
    }
  </style>
</head>

<body>
  <div class="container-fluid">
    <div class="text-center mb-2">
      <h1 id="title">Search Results</h1>
    </div>

    <div class="mb-2">
      <form action="/search/" method="get" id="form-search">
        <input type="text" name="q" class="form-control" placeholder="type to search" />
      </form>
    </div>

    <div id="sr">
      {%- set posts_length = site.posts.length %}
      {%- set posts = site.posts.sort('date', -1) %}
      <small>total posts {{ posts_length | safe }}</small>

      {% for post in posts.toArray() %}
      <div class="card mb-2" title="{{ post.title }}" permalink="{{ post.permalink }}"
        onclick="cardClickHandler(this);">
        <div class="row g-0">
          <div class="col-sm-4 position-relative">
            <a class="link-dark text-decoration-none" href="{{ post.permalink }}" target="_blank"> <img
                src='https://via.placeholder.com/600' source="{{ post.thumbnail }}"
                class="card-img fit-cover w-100 h-100" alt="Thumbnail {{ post.title }}" /></a>
          </div>

          <div class="col-sm-8">
            <div class="card-body">
              <h5 class="card-title">
                <a class="link-dark text-decoration-none" href="{{ post.permalink }}"
                  target="_blank">{{ escape_html(post.title) }}</a>
              </h5>

              <p class="card-text">{{ escape_html(post.description) }}</p>
              <!--<span class="badge rounded-pill bg-dark">tag</span>-->
            </div>

            <div class="card-footer text-end text-muted">
              <!--Last updated {{ date(page.updated, 'dddd, MMMM Do YYYY, h:mm:ss a') }}.-->
              <button class="btn btn-sm btn-primary">View</button>
            </div>
          </div>
        </div>
      </div>
      {% endfor %}
    </div>
  </div>

  <script>
    const searchURL = "{{ config.url }}/search.xml";
    fetch(searchURL).then(response => response.text()).then(response => {
      const parser = new DOMParser();
      const xmlDoc = parser.parseFromString(response, "text/xml");
      const root = xmlDoc.getElementsByTagName("search")[0]
      const baseURL = new URL('{{ config.url }}')
      const results = Array.from(root.children).map(el => {
        baseURL.pathname = el.querySelector('url').innerHTML.trim().replace(/^\/+/, '/')
        const title = el.querySelector('title').innerHTML.trim()
        return {
          title,
          content: el.querySelector('content').innerHTML.trim(),
          url: baseURL.toString(),
          card: document.querySelector(
            'div.card[title="' + title + '"]'
          )
        }
      })

      const querySearch = getParameterByName('q')
      if (querySearch) {
        document.getElementById('title').innerHTML = querySearch + ' Search Result'
      } else {
        document.getElementById('title').innerHTML = 'WMI Site Search'
      }

      results.forEach(item => {
        const card = item.card
        if (card) {
          // supress image error
          const checkImageBroken = function () {
            const img = card.querySelector('img[source]')
            const source = img.getAttribute('source')
            const imgElement = new Image();
            imgElement.addEventListener('load', () => (img.src = source));
            //imgElement.addEventListener('error', () => resolve(false));
            imgElement.src = source
          }


          if (querySearch) {
            const matchTitle = new RegExp(querySearch, 'igm').test(item.title)
            const matchContent = new RegExp(querySearch, 'igm').test(item.content)
            if (matchTitle || matchContent) {
              // matched
              checkImageBroken()
            } else {
              card.remove()
            }
          }
        }
      })
    });

    document.getElementById('form-search').addEventListener('submit', function (_e) {
      _e.preventDefault()
      location.href = '/search/?q=' + _e.target.elements.q.value
      return false
    })

    function cardClickHandler(el) {
      const perm = el.getAttribute('permalink')
      //window.location.href = perm
      window.open(perm, 'wmi').focus()
    }

    function getParameterByName(name, url = window.location.href) {
      name = name.replace(/[\[\]]/g, '\\$&');
      var regex = new RegExp('[?&]' + name + '(=([^&#]*)|&|#|$)'),
        results = regex.exec(url);
      if (!results) return null;
      if (!results[2]) return '';
      return decodeURIComponent(results[2].replace(/\+/g, ' '));
    }
  </script>

  <!-- Option 1: Bootstrap Bundle with Popper -->
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/js/bootstrap.bundle.min.js"
    integrity="sha384-MrcW6ZMFYlzcLA8Nl+NtUVF0sA7MsXsP1UyJoMp4YLEuNSfAP+JcXn/tWtIaxVXM"
    crossorigin="anonymous"></script>

</body>

</html>

<!--
<style>
  #___gcse_0 * {
    background-color: ivory;
    color: teal;
  }
</style>

(function () {
  //var cx = 'partner-pub-7975270895217217:5914050470';
  var cx = '50db9c8dc9d9cf8a2';
  var gcse = document.createElement('script');
  gcse.type = 'text/javascript';
  gcse.async = true;
  gcse.src = 'https://cse.google.com/cse.js?cx=' + cx;
  var s = document.getElementsByTagName('script')[0];
  s.parentNode.insertBefore(gcse, s);
})();
<gcse:searchresults-only class='gcse-searchresults-only'>Search Results Here</gcse:searchresults-only>
-->
